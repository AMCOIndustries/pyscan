# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Complete Build, Lint, and Test

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_run:
    workflows: ["auto_versioning"]
    types:
      - completed
  workflow_dispatch:
  check_suite:
    types:
      - requested
      - completed
  check_run:
    types:
      - requested
      - completed

permissions:
  contents: read

jobs:
  complete:
    runs-on: ubuntu-latest

    steps:
      - name: Create or Update Check Run
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: checkSuite } = await github.checks.getSuite({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_suite_id: context.payload.check_suite.id
            });
  
            const { data: checkRun } = await github.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Your Check Name',
              head_sha: checkSuite.head_sha,
              status: 'in_progress',
              started_at: new Date().toISOString()
            });
    
            - uses: actions/checkout@v3
            - name: Set up Python 3.10
              uses: actions/setup-python@v3
              with:
                python-version: "3.10"
        
            - name: Install package
              run: |
                python -m pip install --upgrade pip
                python -m pip install wheel
                python -m pip install flake8
                python -m pip install pytest
                python -m pip install nbmake
                python -m pip install -e .
        
            - name: Lint with flake8
              run: |
                # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
        
            - name: Test with pytest
              run: |
                pytest
        
            - name: Test notebooks
              run: |
                pytest --nbmake "./demo_notebooks/" 
  
            await github.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkRun.id,
              status: 'completed',
              conclusion: 'success',
              completed_at: new Date().toISOString()
            });
