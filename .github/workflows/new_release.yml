# This workflow will install Python dependencies, lint, run all tests and update the version + changelog
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build, Lint, Complete Test, and Version for Release

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  pull_request_review:
    branches: [ "main", "dev" ]
    types: [submitted]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install package
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel
        python -m pip install flake8
        python -m pip install pytest
        python -m pip install nbmake
        python -m pip install -e .

    - name: Lint with flake8
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest
        
    - name: Test notebooks
      run: |
        pytest --nbmake "./demo_notebooks/" 

  approved:
    if: github.event.review.state == 'APPROVED'

      permissions:
        contents: write
        issues: write
        pull-requests: write

        runs-on: ubuntu-latest

      # Autoversioning and updating changelog:
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}