# This workflow will auto-version when pull-requests are merged to main.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Release

on:
  pull_request:
    branches: 
      - "main"
    types:
      - closed

permissions:
  contents: write

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v4
      with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

    #try to pull from main here, just the version and changelog files if possible, always reset to these with each push then version and it will work.
    - name: Pull From Main
      run: |
        git --version
        git config --global user.name "rsbrost"
        git config --global user.email "rsbrost@sandia.gov"
        git remote set-url origin https://${{ secrets.REPO_TOKEN_SECRET }}@github.com/${{ github.repository }}
        git status
        git fetch
        
        git rm CHANGELOG.md
        git rm VERSION.json
        git status
        git add .
        git commit -m "Pulled latest CHANGELOG.md and VERSION.json from main." || echo "Nothing to commit."
        git push || echo "Nothing to push."
        
        git checkout origin/main CHANGELOG.md
        git checkout origin/main VERSION.json
        git status
        git add .
        git commit -m "Pulled latest CHANGELOG.md and VERSION.json from main." || echo "Nothing to commit."
        git push || echo "Nothing to push."
        git status

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v5.2.1
      with:
          github-token: ${{ secrets.github_token }}
          version-file: "VERSION.json"
          release-count: '30'
          git-branch: ${{ github.event.pull_request.head.ref }}
          skip-version-file: 'true'
          skip-commit: 'true'

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}

      
